
volumes:
  grafana_data:
  mimir_data:
  
networks:
  prusa:

services:
  mimir:
    image: grafana/mimir:2.11.0
    container_name: mimir
    restart: unless-stopped
    volumes:
      - ./docs/config/mimir.yaml:/etc/mimir-config/mimir.yaml
      - mimir_data:/data
    ports:
      - "9009:9009"
    entrypoint:
      - /bin/mimir
      - -config.file=/etc/mimir-config/mimir.yaml
    networks:
      - prusa

  influxproxy:
    build: 
      context: https://github.com/grafana/influx2cortex.git#main
      network: host
      dockerfile_inline: |
        FROM golang:1.23-alpine as build
        RUN apk add --update --no-cache git coreutils
        WORKDIR /go/src/github.com/grafana/influx2cortex
        COPY . .
        RUN go mod download
        RUN go build -o /bin/influx2cortex ./cmd/influx2cortex
        FROM alpine:3.12
        RUN apk add --update --no-cache ca-certificates
        RUN addgroup -g 1000 app && \
          adduser -u 1000 -h /app -G app -S app
        WORKDIR /app
        USER app
        COPY --from=build /bin/influx2cortex /bin/influx2cortex
        ENTRYPOINT [ "/bin/influx2cortex" ]
    container_name: influxproxy
    entrypoint: 
    - "/bin/influx2cortex"
    - "-auth.enable=false"
    - "-server.http-listen-port=8007"
    - "-write-endpoint=http://mimir:9009/api/v1/push"
    pull_policy: build
    restart: unless-stopped
    depends_on:
      - mimir
    networks:
      - prusa

  prusa_metrics_handler:
    build: .
    container_name: prusa_metrics_handler
    restart: unless-stopped
    command: 
      - "--influx-url=http://influxproxy:8007"
      - "--influx-org=pubeldev"
      - "--influx-bucket=prusa"
      - "--influx-token=EEKpryGZk8pVDXmIuy484BKUxM5jOEDv7YNoeNZUbsNbpbPbP6kK_qY9Zsyw7zNnlZ7pHG16FYzNaqwLMBUz8g=="
    ports:
      - 10011:10011 # prometheus metrics
      - 8514:8514/udp
    depends_on:
      - influxproxy
    networks:
      - prusa

  grafana:
    image: grafana/grafana:11.3.0
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prusa_metrics_handler
    ports:
      - "3000:3000"
    networks:
      - prusa
    volumes:
      - ./docs/config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana_data:/var/lib/grafana
